{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\nexport const stockAPI = {\n  // Get stock overview\n  getStockOverview: async symbol => {\n    try {\n      const response = await api.get(`/api/stock/${symbol}`);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to fetch stock data');\n    }\n  },\n  // Get stock quote\n  getStockQuote: async symbol => {\n    try {\n      const response = await api.get(`/api/quote/${symbol}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to fetch stock quote');\n    }\n  },\n  // Search stocks\n  searchStocks: async keywords => {\n    try {\n      const response = await api.get(`/api/search/${keywords}`);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to search stocks');\n    }\n  },\n  // Get health status\n  getHealth: async () => {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      throw new Error('API is not available');\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","stockAPI","getStockOverview","symbol","response","get","data","error","_error$response","_error$response$data","Error","detail","getStockQuote","_error$response2","_error$response2$data","searchStocks","keywords","_error$response3","_error$response3$data","getHealth"],"sources":["C:/Users/HP/projects/stockgpt/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n});\r\n\r\nexport const stockAPI = {\r\n  // Get stock overview\r\n  getStockOverview: async (symbol) => {\r\n    try {\r\n      const response = await api.get(`/api/stock/${symbol}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to fetch stock data');\r\n    }\r\n  },\r\n\r\n  // Get stock quote\r\n  getStockQuote: async (symbol) => {\r\n    try {\r\n      const response = await api.get(`/api/quote/${symbol}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to fetch stock quote');\r\n    }\r\n  },\r\n\r\n  // Search stocks\r\n  searchStocks: async (keywords) => {\r\n    try {\r\n      const response = await api.get(`/api/search/${keywords}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to search stocks');\r\n    }\r\n  },\r\n\r\n  // Get health status\r\n  getHealth: async () => {\r\n    try {\r\n      const response = await api.get('/health');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('API is not available');\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAG;EACtB;EACAC,gBAAgB,EAAE,MAAOC,MAAM,IAAK;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,cAAcF,MAAM,EAAE,CAAC;MACtD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,MAAM,KAAI,4BAA4B,CAAC;IAC/E;EACF,CAAC;EAED;EACAC,aAAa,EAAE,MAAOT,MAAM,IAAK;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,cAAcF,MAAM,EAAE,CAAC;MACtD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAM,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIJ,KAAK,CAAC,EAAAG,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBH,MAAM,KAAI,6BAA6B,CAAC;IAChF;EACF,CAAC;EAED;EACAI,YAAY,EAAE,MAAOC,QAAQ,IAAK;IAChC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,eAAeW,QAAQ,EAAE,CAAC;MACzD,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAU,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIR,KAAK,CAAC,EAAAO,gBAAA,GAAAV,KAAK,CAACH,QAAQ,cAAAa,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBP,MAAM,KAAI,yBAAyB,CAAC;IAC5E;EACF,CAAC;EAED;EACAQ,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,SAAS,CAAC;MACzC,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIG,KAAK,CAAC,sBAAsB,CAAC;IACzC;EACF;AACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}